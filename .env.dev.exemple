# PostgreSQL (utilisé comme metastore interne à Airflow)
# Ce service est créé et géré avec un conteneur Docker.
POSTGRES_USER=
POSTGRES_PASSWORD=
POSTGRES_DB=

# pgAdmin
# Ce service est créé et géré avec un conteneur Docker.
# Il permet de se connecter au metastore de Airflow en cas de besoin
# (serveur PostgreSQL paramétré ci-avant)
PGADMIN_DEFAULT_EMAIL=
PGADMIN_DEFAULT_PASSWORD=

# Airflow
# Ce service est créé et géré avec Docker (un conteneur "Webservice" et un autre "Scheduler").
# Les variables AIRFLOW__CORE__FERNET_KEY et AIRFLOW__WEBSERVER__SECRET_KEY peuvent être renseignées
# avec le script python generer_cles_secretes.py (voir section Exécution en local/Débogage)
# La variable AIRFLOW_UID doit être renseignée avec l'UID utilisé pour gérer les fichiers générés par Airflow
# sur l'hôte (partage de répertoire entre la machine hôte et Docker). Dans un environnement de développement,
# il s'agit de l'UID de l'utilisateur du développeur. Pour connaître son UID, exécuter la commande "id -u".
AIRFLOW__CORE__EXECUTOR=
AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@airflow_postgres_dev:5432/${POSTGRES_DB}
AIRFLOW__CORE__FERNET_KEY=
AIRFLOW__WEBSERVER__SECRET_KEY=
AIR_FLOW_USER_NAME=
AIR_FLOW_USER_PASSWORD=
AIR_FLOW_USER_FIRST_NAME=
AIR_FLOW_USER_LAST_NAME=
AIR_FLOW_USER_EMAIL=
AIRFLOW_UID=